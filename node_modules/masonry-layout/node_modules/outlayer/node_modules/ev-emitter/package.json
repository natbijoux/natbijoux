{
  "name": "ev-emitter",
  "version": "1.0.2",
  "description": "lil' event emitter",
  "main": "ev-emitter.js",
  "scripts": {
    "test": "mocha test/test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/metafizzy/ev-emitter.git"
  },
  "keywords": [
    "event",
    "emitter",
    "pubsub"
  ],
  "author": {
    "name": "David DeSandro"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/metafizzy/ev-emitter/issues"
  },
  "homepage": "https://github.com/metafizzy/ev-emitter#readme",
  "directories": {
    "test": "test"
  },
  "readme": "# EvEmitter\n\n_Lil' event emitter_ â€” add a little pub/sub\n\nEvEmitter adds publish/subscribe pattern to a browser class. It's a smaller version of [Olical/EventEmitter](https://github.com/Olical/EventEmitter). That EventEmitter is full featured, widely used, and great. This EvEmitter has just the base event functionality to power the event API in libraries like [Isotope](http://isotope.metafizzy.co), [Flickity](http://flickity.metafizzy.co), [Masonry](http://masonry.desandro.com), and [imagesLoaded](http://imagesloaded.desandro.com).\n\n## API\n\n``` js\n// Inherit prototype, IE8+\nMyClass.prototype = new EvEmitter();\n\n// Inherit prototype, IE9+\nMyClass.prototype = Object.create( EvEmitter.prototype );\n\n// Mixin prototype\n_.extend( MyClass.prototype, EvEmitter.prototype );\n\n// single instance\nvar emitter = new EventEmitter();\n```\n\n### on\n\nAdd an event listener.\n\n``` js\nemitter.on( eventName, listener )\n```\n\n+ `eventName` - _String_ - name of the event\n+ `listener` - _Function_\n\n### off\n\nRemove an event listener.\n\n``` js\nemitter.off( eventName, listener )\n```\n\n### once\n\nAdd an event listener to be triggered only once.\n\n``` js\nemitter.once( eventName, listener )\n```\n\n### emitEvent\n\nTrigger an event.\n\n``` js\nemitter.emitEvent( eventName, args )\n```\n\n+ `eventName` - _String_ - name of the event\n+ `args` - _Array_ - arguments passed to listeners\n\n## Code example\n\n``` js\n// create event emitter\nvar emitter = new EventEmitter();\n\n// listeners\nfunction hey( a, b, c ) {\n  console.log( 'Hey', a, b, c )\n}\n\nfunction ho( a, b, c ) {\n  console.log( 'Ho', a, b, c )\n}\n\nfunction letsGo( a, b, c ) {\n  console.log( 'Lets go', a, b, c )\n}\n\n// bind listeners\nemitter.on( 'rock', hey )\nemitter.once( 'rock', ho )\n// trigger letsGo once\nemitter.on( 'rock', letsGo )\n\n// emit event\nemitter.emitEvent( 'rock', [ 1, 2, 3 ] )\n// => 'Hey', 1, 2, 3\n// => 'Ho', 1, 2, 3\n// => 'Lets go', 1, 2, 3\n\n// unbind\nemitter.off( 'rock', ho )\n\nemitter.emitEvent( 'rock', [ 4, 5, 6 ] )\n// => 'Hey' 4, 5, 6\n```\n\n## License\n\nEvEmitter is released under the [MIT License](http://desandro.mit-license.org/). Have at it.\n",
  "readmeFilename": "README.md",
  "_id": "ev-emitter@1.0.2",
  "dist": {
    "shasum": "8d3b57c420c17a94398dd9b02f563609a8d7c0db"
  },
  "_from": "ev-emitter@^1.0.0",
  "_resolved": "https://registry.npmjs.org/ev-emitter/-/ev-emitter-1.0.2.tgz"
}
